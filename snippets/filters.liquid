{% if block.type == 'sort_by' %}
  <div class="filter {% cycle '', 'right-filter' %}" {{ block.shopify_attributes }}>
    <button class="filter-menu">
      <h4>{{ block.settings.sort_by_title }}</h4>
    </button>
    <ul class="filter-list" id="sort-by" style="display: none;">
        <li><a href="/collections/{{ collection.handle }}?sort_by=manual">{{ 'collections.sorting.featured' | t }}</a></li>
        <li><a href="/collections/{{ collection.handle }}?sort_by=price-ascending">{{ 'collections.sorting.price_ascending' | t }}</a></li>
        <li><a href="/collections/{{ collection.handle }}?sort_by=price-descending">{{ 'collections.sorting.price_descending' | t }}</a></li>
        <li><a href="/collections/{{ collection.handle }}?sort_by=title-ascending">{{ 'collections.sorting.az' | t }}</a></li>
        <li><a href="/collections/{{ collection.handle }}?sort_by=title-descending">{{ 'collections.sorting.za' | t }}</a></li>
        <li><a href="/collections/{{ collection.handle }}?sort_by=created-ascending">{{ 'collections.sorting.date_ascending' | t }}</a></li>
        <li><a href="/collections/{{ collection.handle }}?sort_by=created-descending">{{ 'collections.sorting.date_descending' | t }}</a></li>
        <li><a href="/collections/{{ collection.handle }}?sort_by=best-selling">{{ 'collections.sorting.best_selling' | t }}</a></li>
       </ul>
    <script>
      Shopify.queryParams = {};
      if (location.search.length) {
        for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
          aKeyValue = aCouples[i].split('=');
          if (aKeyValue.length > 1) {
            Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
          }
        }
      }
      jQuery('#sort-by')
      .val('{{ collection.sort_by | default: collection.default_sort_by  }}')
           .bind('change', function() {
        Shopify.queryParams.sort_by = jQuery(this).val();
        location.search = jQuery.param(Shopify.queryParams);
      });
      $(document).on('shopify:section:load', function(event) {
        jQuery('#sort-by')
        .val('{{ collection.sort_by | default: collection.default_sort_by  }}')
             .bind('change', function() {
          Shopify.queryParams.sort_by = jQuery(this).val();
          location.search = jQuery.param(Shopify.queryParams);
        });
      });
    </script>
  </div>
{% endif %}

{% if block.type == 'filter' %}
  <div class="filter {% cycle '', 'right-filter' %}" {{ block.shopify_attributes }}>
    <button class="filter-menu">
      <h4>{{ block.settings.filter_by_title }}</h4>
    </button>
    <ul class="filter-list{% if block.settings.filter_by_title contains "Color" or block.settings.filter_by_title contains "Colour" %} color-filter{% endif %}" style="display: none;">
      {% assign tags = block.settings.filter_by  | replace: ' ,', ',' | replace: ', ', ',' | split: ',' %}
      {% for tag in tags %}
      {% assign is_color = false %}
      {% capture color_filter %}{{ block.settings.filter_by_title | downcase }}{% endcapture %}

      {% if color_filter contains 'color' or color_filter contains 'colour' %}
      {% assign swatch_image_url = tag | handle | append: '.png' | file_url %}
      {% assign css_color = tag | split: ' ' | last | handle %}
      {% assign is_color = true %}
      {% endif %}

      {% if current_tags contains tag %}
      <li data-variant-image="{{ variant_image_url }}" class="current">{% if is_color %}<span style="background-color: {{ css_color }}; background-image: url('{{ swatch_image_url }}');" class="color_filter"></span>{% endif %}{{ tag | link_to_remove_tag: tag }}</li>
      {% elsif collection.all_tags contains tag %}
      <li data-variant-image="{{ variant_image_url }}">{% if is_color %}<span style="background-color: {{ css_color }}; background-image: url('{{ swatch_image_url }}');" class="color_filter"></span>{% endif %}{{ tag | link_to_add_tag: tag }}</li>
      {% endif %}
      {% endfor %}
    </ul>
    <script>
      Shopify.queryParams = {};
      if (location.search.length) {
        for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
          aKeyValue = aCouples[i].split('=');
          if (aKeyValue.length > 1) {
            Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
          }
        }
      }
      var collFilters = jQuery('.coll-filter');
      collFilters.change(function() {
        delete Shopify.queryParams.page;
        var newTags = [];
        collFilters.each(function() {
          if (jQuery(this).val()) {
            newTags.push(jQuery(this).val());
          }
        });
        {% if collection.handle %}
        var newURL = '/collections/{{ collection.handle }}';
        if (newTags.length) {
          newURL += '/' + newTags.join('+');
        }
        var search = jQuery.param(Shopify.queryParams);
        if (search.length) {
          newURL += '?' + search;
        }
        location.href = newURL;
        {% else %}
        if (newTags.length) {
          Shopify.queryParams.constraint = newTags.join('+');
        }
        else {
          delete Shopify.queryParams.constraint;
        }
        location.search = jQuery.param(Shopify.queryParams);
        {% endif %}
      });

      $(document).on('shopify:section:load', function(event) {
        Shopify.queryParams = {};
        if (location.search.length) {
          for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
            aKeyValue = aCouples[i].split('=');
            if (aKeyValue.length > 1) {
              Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
            }
          }
        }
        var collFilters = jQuery('.coll-filter');
        collFilters.change(function() {
          delete Shopify.queryParams.page;
          var newTags = [];
          collFilters.each(function() {
            if (jQuery(this).val()) {
              newTags.push(jQuery(this).val());
            }
          });
          {% if collection.handle %}
          var newURL = '/collections/{{ collection.handle }}';
          if (newTags.length) {
            newURL += '/' + newTags.join('+');
          }
          var search = jQuery.param(Shopify.queryParams);
          if (search.length) {
            newURL += '?' + search;
          }
          location.href = newURL;
          {% else %}
          if (newTags.length) {
            Shopify.queryParams.constraint = newTags.join('+');
          }
          else {
            delete Shopify.queryParams.constraint;
          }
          location.search = jQuery.param(Shopify.queryParams);
          {% endif %}
        });
      });
    </script>
</div>
{% endif %}
